(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{415:function(e,t,a){"use strict";a.r(t);var r=a(5),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"become-a-validator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#become-a-validator"}},[e._v("#")]),e._v(" Become a validator")]),e._v(" "),a("p",[e._v("Now, you are ready to create a full node and become a validator in Zarb network.")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("p",[e._v("Using a linux cloud server is the best way to run a validator in Zarb network. You may get a virtual\nprivate server from providers like Amazon, Microsoft, Linde, Alibaba, ArvanCloud, etc.")]),e._v(" "),a("h3",{attrs:{id:"recommended-hardwares"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recommended-hardwares"}},[e._v("#")]),e._v(" Recommended hardwares")]),e._v(" "),a("ul",[a("li",[e._v("Processor: Two dedicated core of CPU")]),e._v(" "),a("li",[e._v("Memory: Two gigabyte of RAM")]),e._v(" "),a("li",[e._v("Storage: 10 Gigabytes of free space disk")]),e._v(" "),a("li",[e._v("Network: A broadband Internet connection")])]),e._v(" "),a("h2",{attrs:{id:"üõ°Ô∏è-securing-the-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#üõ°Ô∏è-securing-the-server"}},[e._v("#")]),e._v(" üõ°Ô∏è Securing the server")]),e._v(" "),a("p",[e._v("The first step is securing your server. You may read this\n"),a("a",{attrs:{href:"https://www.linode.com/docs/guides/securing-your-server/",target:"_blank",rel:"noopener noreferrer"}},[e._v("guid line"),a("OutboundLink")],1),e._v(" to learn hot make your sever\nmore secure.")]),e._v(" "),a("h2",{attrs:{id:"initializing-working-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initializing-working-directory"}},[e._v("#")]),e._v(" Initializing working directory")]),e._v(" "),a("p",[e._v("Now you need to create a working directory for you validator. A working directory is a place that\nyou save blockchain data, config and key files.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("zarb init -w ~/zarb/mainnet --mainnet\n")])])]),a("p",[e._v("This command creates a folder at "),a("code",[e._v("~/zarb")]),e._v(". It contains:")]),e._v(" "),a("ul",[a("li",[e._v("Validator private key")]),e._v(" "),a("li",[e._v("Genesis file")]),e._v(" "),a("li",[e._v("Config file")])]),e._v(" "),a("p",[e._v("Feel free to take a look at these files.")]),e._v(" "),a("h2",{attrs:{id:"update-mintbase-address"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-mintbase-address"}},[e._v("#")]),e._v(" Update Mintbase address")]),e._v(" "),a("p",[e._v("Mintbase account is the account that you receive your reward when you propose a new block. If you\ndon't define a Mintbase address, the rewards will goes to the same account with your validator key.\nWe highly recommend you to define separate address to collect your reward.")]),e._v(" "),a("p",[e._v("You can generate new key like this:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("zarb key generate\n")])])]),a("p",[e._v("Then update "),a("code",[e._v("MintbaseAddress")]),e._v(" in config file and set the address.")]),e._v(" "),a("h2",{attrs:{id:"syncing-blockchain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syncing-blockchain"}},[e._v("#")]),e._v(" Syncing blockchain")]),e._v(" "),a("p",[e._v("Now you can start the node and sync with the mainnet. This may take several hours:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("zarb start -w ~/zarb/mainnet\n")])])]),a("h2",{attrs:{id:"enter-committee"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enter-committee"}},[e._v("#")]),e._v(" Enter committee")]),e._v(" "),a("p",[e._v("After syncing with the main net, you need to send a "),a("RouterLink",{attrs:{to:"/guide/transaction-bond.html"}},[e._v("bond transaction")]),e._v(" to\nbond some of your token as stake and enter the validator pool.")],1),e._v(" "),a("p",[e._v("After you join the validator pool, the "),a("RouterLink",{attrs:{to:"/guide/consensus-sortition.html"}},[e._v("sortition")]),e._v(" algorithm starts\nworking and after a while you will enter to "),a("a",{attrs:{href:"./learn-committee"}},[e._v("committee")]),e._v(".")],1),e._v(" "),a("p",[e._v("When you enter the committee, you will have the chance to propose and validate the blocks. Any time\nyou propose a new block, you will get the "),a("RouterLink",{attrs:{to:"/guide/learn-incentive.html"}},[e._v("rewards")]),e._v(".")],1),e._v(" "),a("p",[e._v("Good luck üçÄ")])])}),[],!1,null,null,null);t.default=o.exports}}]);